skip_tags: true
clone_depth: 50

# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable.
platform: x64
os: Visual Studio 2015

matrix:
    fast_finish: false

environment:
  global:
    BUILD_COMMIT: "v1.18.1" # "master"
    TESTPYPI_UPLOAD: "false" # "false"
    PYPI_UPLOAD: "true" # "true"
    REPO_DIR: randomgen
    PACKAGE_NAME: randomgen
    MIN_NUMPY_VER: "1.15"
    PIP_PACKAGES: "pytest"
  TESTPYPI_USERNAME:
    secure: 9D67F9Bcy8PITwg1cezOgw==
  TESTPYPI_PASSWORD:
    secure: sEkgnJNTN/bQu3Lh8PysOA==
  PYPI_USERNAME:
    secure: 9D67F9Bcy8PITwg1cezOgw==
  PYPI_PASSWORD:
    secure: ufGrse+xSx3blI6bh9bnSg==
  ANACONDA_USERNAME:
    secure: 9D67F9Bcy8PITwg1cezOgw==
  ANACONDA_TOKEN:
    secure: 36nPiNN0128SGPNp1hya5eIJUDBCcKV1okGuHTfwdvmgCQohx8i35hFmdjQl0WHf

  matrix:
    - PYTHON: C:\Python35
    - PYTHON: C:\Python35-x64
    - PYTHON: C:\Python36
    - PYTHON: C:\Python36-x64
    - PYTHON: C:\Python37
    - PYTHON: C:\Python37-x64
    - PYTHON: C:\Python38
    - PYTHON: C:\Python38-x64


install:
  - git submodule update --init --recursive
  - git config --global core.autocrlf false
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - python -m pip install -U pip
  - pip install numpy>=%MIN_NUMPY_VER% cython nose pytest wheel
  - set "WHEELBUILDER_DIR=%cd%"

build_script:
  - cd %REPO_DIR%
  - git checkout %BUILD_COMMIT%
  - python setup.py bdist_wheel
  - cd ..

test_script:
  # install from wheel
  - pip install --pre --no-index --find-links %REPO_DIR%\dist\ %PACKAGE_NAME%
  - mkdir _for_testing
  - cd _for_testing
  - pytest --pyargs randomgen

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: $(REPO_DIR)\dist\*

on_success:
  - echo "Upload here"
  - cd %WHEELBUILDER_DIR%\
  - pip install twine
  - call twine-upload.bat
