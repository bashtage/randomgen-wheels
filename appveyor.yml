skip_tags: true
clone_depth: 50

# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable.
platform: x64
os: Visual Studio 2015

matrix:
    fast_finish: false

environment:
  global:
    BUILD_COMMIT: "v1.16.4" # "master"
    TESTPYPI_UPLOAD: "true" # "false"
    PYPI_UPLOAD: "false" # "true"
    CONDA_BUILD: "false"
    CONDA_UPLOAD: "false"
    PACKAGE_NAME: randomgen
    CONDA_NUMPY_VERSION: "1.16"
    MIN_NUMPY_VER: "1.15"
    PIP_PACKAGES: "pytest"
  TESTPYPI_USERNAME:
    secure: 9D67F9Bcy8PITwg1cezOgw==
  TESTPYPI_PASSWORD:
    secure: sEkgnJNTN/bQu3Lh8PysOA==
  PYPI_USERNAME:
    secure: 9D67F9Bcy8PITwg1cezOgw==
  PYPI_PASSWORD:
    secure: ufGrse+xSx3blI6bh9bnSg==
  ANACONDA_USERNAME:
    secure: 9D67F9Bcy8PITwg1cezOgw==
  ANACONDA_TOKEN:
    secure: 36nPiNN0128SGPNp1hya5eIJUDBCcKV1okGuHTfwdvmgCQohx8i35hFmdjQl0WHf

  matrix:
    - PY_VER: "2.7"
      PYTHON_ARCH: "x86"
    - PY_VER: "2.7"
      PYTHON_ARCH: "x86_64"
    - PY_VER: "3.7"
      PYTHON_ARCH: "x86_64"
    - PY_VER: "3.7"
      PYTHON_ARCH: "x86"
    - PY_VER: "3.6"
      PYTHON_ARCH: "x86_64"
    - PY_VER: "3.6"
      PYTHON_ARCH: "x86"
    - PY_VER: "3.5"
      PYTHON_ARCH: "x86_64"
      CONDA_NUMPY_VERSION: "1.15"
    - PY_VER: "3.5"
      PYTHON_ARCH: "x86"
      CONDA_NUMPY_VERSION: "1.15"


install:
  - git submodule update --init --recursive
  - ps: Start-FileDownload "https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-$env:PYTHON_ARCH.exe" C:\Miniconda.exe; echo "Finished downloading miniconda"
  - cmd: C:\Miniconda.exe /S /D=C:\Py
  - SET PATH=C:\Py;C:\Py\Library\mingw-w64\bin;C:\Py\Library\usr\bin;C:\Py\Library\bin;C:\Py\Scripts;C:\Py\bin;C:\Py\condabin;%PATH%
  - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"
  - conda config --set always_yes yes
  - conda update conda --quiet
  - conda install numpy>=MIN_NUMPY_VER
  - call build-conda.bat
  - conda create -n randomgen-build python=%PY_VER% numpy>=%MIN_NUMPY_VER% cython nose pytest wheel
  - conda activate randomgen-build
  - python -m pip install -U pip
  - pip install %PIP_PACKAGES% --upgrade
  - set "WHEELBUILDER_DIR=%cd%"

build_script:
  - cd randomgen
  - git checkout %BUILD_COMMIT%
  - python setup.py bdist_wheel
  - set "REPO_DIR=%cd%"
  - cd ..

test_script:
  # install from wheel
  - pip install --pre --no-index --find-links %REPO_DIR%\dist\ %PACKAGE_NAME%

  - mkdir _for_testing
  - cd _for_testing
  - pytest --pyargs randomgen

on_success:
  - echo "Upload here"
  - cd %WHEELBUILDER_DIR%\
  - pip install twine
  - call twine-upload.bat
